.. container:: page-top

.. container:: nav-bar

   +----------------------------------+----------------------------------+
   | `m                               | `Linux/UNIX system programming   |
   | an7.org <../../../index.html>`__ | trainin                          |
   | > Linux >                        | g <http://man7.org/training/>`__ |
   | `man-pages <../index.html>`__    |                                  |
   +----------------------------------+----------------------------------+

--------------

a64l(3p) — Linux manual page
============================

+-----------------------------------+-----------------------------------+
| `PROLOG <#PROLOG>`__ \|           |                                   |
| `NAME <#NAME>`__ \|               |                                   |
| `SYNOPSIS <#SYNOPSIS>`__ \|       |                                   |
| `DESCRIPTION <#DESCRIPTION>`__ \| |                                   |
| `RETURN VALUE <#RETURN_VALUE>`__  |                                   |
| \| `ERRORS <#ERRORS>`__ \|        |                                   |
| `EXAMPLES <#EXAMPLES>`__ \|       |                                   |
| `APPLICAT                         |                                   |
| ION USAGE <#APPLICATION_USAGE>`__ |                                   |
| \| `RATIONALE <#RATIONALE>`__ \|  |                                   |
| `FUTURE D                         |                                   |
| IRECTIONS <#FUTURE_DIRECTIONS>`__ |                                   |
| \| `SEE ALSO <#SEE_ALSO>`__ \|    |                                   |
| `COPYRIGHT <#COPYRIGHT>`__        |                                   |
+-----------------------------------+-----------------------------------+
| .. container:: man-search-box     |                                   |
+-----------------------------------+-----------------------------------+

::

   A64L(3P)                POSIX Programmer's Manual               A64L(3P)


-----------------------------------------------------

::

          This manual page is part of the POSIX Programmer's Manual.  The
          Linux implementation of this interface may differ (consult the
          corresponding Linux manual page for details of Linux behavior),
          or the interface may not be implemented on Linux.

NAME
-------------------------------------------------

::

          a64l, l64a — convert between a 32-bit integer and a radix-64
          ASCII string


---------------------------------------------------------

::

          #include <stdlib.h>

          long a64l(const char *s);
          char *l64a(long value);


---------------------------------------------------------------

::

          These functions maintain numbers stored in radix-64 ASCII
          characters. This is a notation by which 32-bit integers can be
          represented by up to six characters; each character represents a
          digit in radix-64 notation. If the type long contains more than
          32 bits, only the low-order 32 bits shall be used for these
          operations.

          The characters used to represent digits are '.'  (dot) for 0, '/'
          for 1, '0' through '9' for [2,11], 'A' through 'Z' for [12,37],
          and 'a' through 'z' for [38,63].

          The a64l() function shall take a pointer to a radix-64
          representation, in which the first digit is the least
          significant, and return the corresponding long value. If the
          string pointed to by s contains more than six characters, a64l()
          shall use the first six. If the first six characters of the
          string contain a null terminator, a64l() shall use only
          characters preceding the null terminator. The a64l() function
          shall scan the character string from left to right with the least
          significant digit on the left, decoding each character as a 6-bit
          radix-64 number. If the type long contains more than 32 bits, the
          resulting value is sign-extended. The behavior of a64l() is
          unspecified if s is a null pointer or the string pointed to by s
          was not generated by a previous call to l64a().

          The l64a() function shall take a long argument and return a
          pointer to the corresponding radix-64 representation. The
          behavior of l64a() is unspecified if value is negative.

          The value returned by l64a() may be a pointer into a static
          buffer. Subsequent calls to l64a() may overwrite the buffer.

          The l64a() function need not be thread-safe.


-----------------------------------------------------------------

::

          Upon successful completion, a64l() shall return the long value
          resulting from conversion of the input string. If a string
          pointed to by s is an empty string, a64l() shall return 0L.

          The l64a() function shall return a pointer to the radix-64
          representation. If value is 0L, l64a() shall return a pointer to
          an empty string.


-----------------------------------------------------

::

          No errors are defined.

          The following sections are informative.


---------------------------------------------------------

::

          None.


---------------------------------------------------------------------------

::

          If the type long contains more than 32 bits, the result of
          a64l(l64a(x)) is x in the low-order 32 bits.


-----------------------------------------------------------

::

          This is not the same encoding as used by either encoding variant
          of the uuencode utility.


---------------------------------------------------------------------------

::

          None.


---------------------------------------------------------

::

          strtoul(3p)

          The Base Definitions volume of POSIX.1‐2017, stdlib.h(0p)

          The Shell and Utilities volume of POSIX.1‐2017, uuencode(1p)


-----------------------------------------------------------

::

          Portions of this text are reprinted and reproduced in electronic
          form from IEEE Std 1003.1-2017, Standard for Information
          Technology -- Portable Operating System Interface (POSIX), The
          Open Group Base Specifications Issue 7, 2018 Edition, Copyright
          (C) 2018 by the Institute of Electrical and Electronics
          Engineers, Inc and The Open Group.  In the event of any
          discrepancy between this version and the original IEEE and The
          Open Group Standard, the original IEEE and The Open Group
          Standard is the referee document. The original Standard can be
          obtained online at http://www.opengroup.org/unix/online.html .

          Any typographical or formatting errors that appear in this page
          are most likely to have been introduced during the conversion of
          the source files to man page format. To report such errors, see
          https://www.kernel.org/doc/man-pages/reporting_bugs.html .

   IEEE/The Open Group               2017                          A64L(3P)

--------------

Pages that refer to this page:
`stdlib.h(0p) <../man0/stdlib.h.0p.html>`__, 
`l64a(3p) <../man3/l64a.3p.html>`__

--------------

--------------

.. container:: footer

   +-----------------------+-----------------------+-----------------------+
   | HTML rendering        |                       | |Cover of TLPI|       |
   | created 2021-08-27 by |                       |                       |
   | `Michael              |                       |                       |
   | Ker                   |                       |                       |
   | risk <https://man7.or |                       |                       |
   | g/mtk/index.html>`__, |                       |                       |
   | author of `The Linux  |                       |                       |
   | Programming           |                       |                       |
   | Interface <https:     |                       |                       |
   | //man7.org/tlpi/>`__, |                       |                       |
   | maintainer of the     |                       |                       |
   | `Linux man-pages      |                       |                       |
   | project <             |                       |                       |
   | https://www.kernel.or |                       |                       |
   | g/doc/man-pages/>`__. |                       |                       |
   |                       |                       |                       |
   | For details of        |                       |                       |
   | in-depth **Linux/UNIX |                       |                       |
   | system programming    |                       |                       |
   | training courses**    |                       |                       |
   | that I teach, look    |                       |                       |
   | `here <https://ma     |                       |                       |
   | n7.org/training/>`__. |                       |                       |
   |                       |                       |                       |
   | Hosting by `jambit    |                       |                       |
   | GmbH                  |                       |                       |
   | <https://www.jambit.c |                       |                       |
   | om/index_en.html>`__. |                       |                       |
   +-----------------------+-----------------------+-----------------------+

--------------

.. container:: statcounter

   |Web Analytics Made Easy - StatCounter|

.. |Cover of TLPI| image:: https://man7.org/tlpi/cover/TLPI-front-cover-vsmall.png
   :target: https://man7.org/tlpi/
.. |Web Analytics Made Easy - StatCounter| image:: https://c.statcounter.com/7422636/0/9b6714ff/1/
   :class: statcounter
   :target: https://statcounter.com/
