.. container:: page-top

.. container:: nav-bar

   +----------------------------------+----------------------------------+
   | `m                               | `Linux/UNIX system programming   |
   | an7.org <../../../index.html>`__ | trainin                          |
   | > Linux >                        | g <http://man7.org/training/>`__ |
   | `man-pages <../index.html>`__    |                                  |
   +----------------------------------+----------------------------------+

--------------

seccomp_syscall_priority(3) — Linux manual page
===============================================

+-----------------------------------+-----------------------------------+
| `NAME <#NAME>`__ \|               |                                   |
| `SYNOPSIS <#SYNOPSIS>`__ \|       |                                   |
| `DESCRIPTION <#DESCRIPTION>`__ \| |                                   |
| `RETURN VALUE <#RETURN_VALUE>`__  |                                   |
| \| `EXAMPLES <#EXAMPLES>`__ \|    |                                   |
| `NOTES <#NOTES>`__ \|             |                                   |
| `AUTHOR <#AUTHOR>`__ \|           |                                   |
| `SEE ALSO <#SEE_ALSO>`__ \|       |                                   |
| `COLOPHON <#COLOPHON>`__          |                                   |
+-----------------------------------+-----------------------------------+
| .. container:: man-search-box     |                                   |
+-----------------------------------+-----------------------------------+

::

   seccomp_syscall_priority(3)seccomp Documentationcomp_syscall_priority(3)

NAME
-------------------------------------------------

::

          seccomp_syscall_priority - Prioritize syscalls in the seccomp
          filter


---------------------------------------------------------

::

          #include <seccomp.h>

          typedef void * scmp_filter_ctx;

          int SCMP_SYS(syscall_name);

          int seccomp_syscall_priority(scmp_filter_ctx ctx,
                                       int syscall, uint8_t priority);

          Link with -lseccomp.


---------------------------------------------------------------

::

          The seccomp_syscall_priority() function provides a priority hint
          to the seccomp filter generator in libseccomp such that higher
          priority syscalls are placed earlier in the seccomp filter code
          so that they incur less overhead at the expense of lower priority
          syscalls.  A syscall's priority can be set regardless of if any
          rules currently exist for that syscall; the library will remember
          the priority and it will be assigned to the syscall if and when a
          rule for that syscall is created.

          While it is possible to specify the syscall value directly using
          the standard __NR_syscall values, in order to ensure proper
          operation across multiple architectures it is highly recommended
          to use the SCMP_SYS() macro instead.  See the EXAMPLES section
          below.

          The priority parameter takes an 8-bit value ranging from 0 - 255;
          a higher value represents a higher priority.

          The filter context ctx is the value returned by the call to
          seccomp_init().


-----------------------------------------------------------------

::

          The SCMP_SYS() macro returns a value suitable for use as the
          syscall value in seccomp_syscall_priority().

          The seccomp_syscall_priority() function returns zero on success
          or one of the following error codes on failure:

          -EDOM  Architecture specific failure.

          -EFAULT
                 Internal libseccomp failure.

          -EINVAL
                 Invalid input, either the context or architecture token is
                 invalid.

          -ENOMEM
                 The library was unable to allocate enough memory.


---------------------------------------------------------

::

          #include <seccomp.h>

          int main(int argc, char *argv[])
          {
               int rc = -1;
               scmp_filter_ctx ctx;

               ctx = seccomp_init(SCMP_ACT_KILL);
               if (ctx == NULL)
                    goto out;

               /* ... */

               rc = seccomp_syscall_priority(ctx, SCMP_SYS(read), 200);
               if (rc < 0)
                    goto out;

               /* ... */

          out:
               seccomp_release(ctx);
               return -rc;
          }


---------------------------------------------------

::

          While the seccomp filter can be generated independent of the
          kernel, kernel support is required to load and enforce the
          seccomp filter generated by libseccomp.

          The libseccomp project site, with more information and the source
          code repository, can be found at
          https://github.com/seccomp/libseccomp.  This tool, as well as the
          libseccomp library, is currently under development, please report
          any bugs at the project site or directly to the author.


-----------------------------------------------------

::

          Paul Moore <paul@paul-moore.com>


---------------------------------------------------------

::

          seccomp_rule_add(3), seccomp_rule_add_exact(3)

COLOPHON
---------------------------------------------------------

::

          This page is part of the libseccomp (high-level API to the Linux
          Kernel's seccomp filter) project.  Information about the project
          can be found at ⟨https://github.com/seccomp/libseccomp⟩.  If you
          have a bug report for this manual page, see
          ⟨https://groups.google.com/d/forum/libseccomp⟩.  This page was
          obtained from the project's upstream Git repository
          ⟨https://github.com/seccomp/libseccomp⟩ on 2021-08-27.  (At that
          time, the date of the most recent commit that was found in the
          repository was 2021-08-25.)  If you discover any rendering
          problems in this HTML version of the page, or you believe there
          is a better or more up-to-date source for the page, or you have
          corrections or improvements to the information in this COLOPHON
          (which is not part of the original manual page), send a mail to
          man-pages@man7.org

   paul@paul-moore.com            30 May 2020   seccomp_syscall_priority(3)

--------------

Pages that refer to this page:
`seccomp_attr_set(3) <../man3/seccomp_attr_set.3.html>`__, 
`seccomp_rule_add(3) <../man3/seccomp_rule_add.3.html>`__

--------------

--------------

.. container:: footer

   +-----------------------+-----------------------+-----------------------+
   | HTML rendering        |                       | |Cover of TLPI|       |
   | created 2021-08-27 by |                       |                       |
   | `Michael              |                       |                       |
   | Ker                   |                       |                       |
   | risk <https://man7.or |                       |                       |
   | g/mtk/index.html>`__, |                       |                       |
   | author of `The Linux  |                       |                       |
   | Programming           |                       |                       |
   | Interface <https:     |                       |                       |
   | //man7.org/tlpi/>`__, |                       |                       |
   | maintainer of the     |                       |                       |
   | `Linux man-pages      |                       |                       |
   | project <             |                       |                       |
   | https://www.kernel.or |                       |                       |
   | g/doc/man-pages/>`__. |                       |                       |
   |                       |                       |                       |
   | For details of        |                       |                       |
   | in-depth **Linux/UNIX |                       |                       |
   | system programming    |                       |                       |
   | training courses**    |                       |                       |
   | that I teach, look    |                       |                       |
   | `here <https://ma     |                       |                       |
   | n7.org/training/>`__. |                       |                       |
   |                       |                       |                       |
   | Hosting by `jambit    |                       |                       |
   | GmbH                  |                       |                       |
   | <https://www.jambit.c |                       |                       |
   | om/index_en.html>`__. |                       |                       |
   +-----------------------+-----------------------+-----------------------+

--------------

.. container:: statcounter

   |Web Analytics Made Easy - StatCounter|

.. |Cover of TLPI| image:: https://man7.org/tlpi/cover/TLPI-front-cover-vsmall.png
   :target: https://man7.org/tlpi/
.. |Web Analytics Made Easy - StatCounter| image:: https://c.statcounter.com/7422636/0/9b6714ff/1/
   :class: statcounter
   :target: https://statcounter.com/
